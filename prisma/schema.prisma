// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Project {
//   id Int @id @default(autoincrement())
//   name String
//   createdAt DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }

model Production {
  id Int @id @default(autoincrement())

  comments String?
  status STATUS_PRODUCTION @default(PROGRAMADO)

  task Task @relation(fields: [taskId], references: [id])
  taskId Int

  tower ListConstruction @relation(fields: [listId], references: [id])
  listId Int

  team Team @relation(fields: [teamId], references: [id])
  teamId Int

  productionDate DateTime
  
  startTimeOfDay String?
  endTimeOfDay String?
}

model Task {
  id Int @id @default(autoincrement())
  name String @unique
  unity UNITY @default(TORRE)
  stage STAGE @default(PRELIMINAR)
  createdAt DateTime @default(now())
  updatedAt   DateTime @updatedAt
  productions Production[]
}

model ListConstruction {
  id Int @id @default(autoincrement())
  tower String @unique
  type String
  locality String
  coordinates String
  forward Float
  height Float
  weight Float
  excavation_volume Float?
  concrete_volume Float?
  backfill_volume Float?
  steel_volume Float?
  createdAt DateTime @default(now())
  updatedAt   DateTime @updatedAt

  embargo EMBARGOES @default(LIBERADO)

  production Production[]
}
model Team {
  id Int @id @default(autoincrement())
  name String @unique
  tooling_cost Int

  employee Employee[]
  equipment Equipment[]
  production Production[]
}

model Equipment {
  id Int @id @default(autoincrement())
  model String
  manufacturer String
  license_plate String @unique
  provider String
  cost Int
  // location Int
  // supply Int
  // wash Int
  // lubricant Int
  // rubber_shop Int
  // mob Int
  status STATUS_EQUIPMENT @default(ATIVO)

  team Team @relation(fields: [teamId], references: [id])
  teamId Int
}

model Employee {
  id Int @id @default(autoincrement())
  registration String @unique
  name String @unique
  occupation String
  base_salary Int
  // type String
  // direct_cost Int
  // social_charges Int
  // food_cost Int
  // epi_cost Int
  // housing_cost Int
  // health_plan Int
  // life_insurance Int
  // training_cost Int
  // trips_cost Int
  leadership LEADERS? @default(NAO)
  status STATUS_EMPLOYEE @default(ATIVO)

  team Team @relation(fields: [teamId], references: [id])
  teamId Int
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String @unique
  password  String
  role Role @default(CONTROLLER)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt

  @@map("user")
}

enum Role {
  CONTROLLER
  ADMIN
  ROOT
}

enum UNITY {
  TORRE
  KM
  UNIDADE
}

enum STATUS_EQUIPMENT {
  ATIVO
  MANUTENCAO
}

enum STATUS_PRODUCTION {
  EXECUTADO
  PROGRAMADO
  ANDAMENTO
}

enum STATUS_EMPLOYEE {
  ATIVO
  TREINAMENTO
  AFASTADO
}

enum LEADERS {
  SIM
  NAO
}

enum EMBARGOES {
  LIBERADO
  PROJETO
  FUNDIARIO
  ARQUEOLOGIA
}

enum STAGE {
  PRELIMINAR
  CIVIL
  MONTAGEM
  LANCAMENTO
}