// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Project {
//   id Int @id @default(autoincrement())
//   name String
//   createdAt DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }

model Diagram {
  id Int @id @default(autoincrement())

  list   Tower @relation(fields: [listId], references: [id])
  listId Int   @unique

  status_topography String?

  status_vegetal_suppression String?

  type_of_foundation_A  String?
  type_of_foundation_B  String?
  type_of_foundation_C  String?
  type_of_foundation_D  String?
  type_of_foundation_MC String?

  status_foundation_A  String?
  status_foundation_B  String?
  status_foundation_C  String?
  status_foundation_D  String?
  status_foundation_MC String?

  status_tower_assembly String?
  status_cable_laying   String?
}

model Production {
  id Int @id @default(autoincrement())

  comments String?
  status   STATUS_PRODUCTION @default(PROGRAMADO)
  weather  WEATHER           @default(BOM)
  task     Task              @relation(fields: [taskId], references: [id])
  taskId   Int

  tower  Tower @relation(fields: [listId], references: [id])
  listId Int

  team   Team @relation(fields: [teamId], references: [id])
  teamId Int

  productionDate DateTime

  startTimeOfDay String?
  endTimeOfDay   String?
}

model Task {
  id        Int      @id @default(autoincrement())
  code      Float    @unique
  group     String
  name      String   @unique
  unity     UNITY    @default(TORRE)
  total     Float
  is_mapped Boolean
  stage     STAGE    @default(PRELIMINAR)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  productions Production[]
}

model Tower {
  id                    Int      @id @default(autoincrement())
  code                  Int
  tower                 String   @unique
  type                  String
  locality              String
  coordinates           String
  forward               Float
  height                Float
  weight                Float
  excavation_volume     Float?
  concrete_volume       Float?
  backfill_volume       Float?
  steel_volume          Float?
  type_of_foundation_A  String?
  type_of_foundation_B  String?
  type_of_foundation_C  String?
  type_of_foundation_D  String?
  type_of_foundation_MC String?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  embargo EMBARGOES @default(LIBERADO)

  production Production[]

  diagram Diagram?
}

model Team {
  id           Int    @id @default(autoincrement())
  name         String @unique
  tooling_cost Int

  employee   Employee[]
  equipment  Equipment[]
  production Production[]
}

model Equipment {
  id            Int    @id @default(autoincrement())
  model         String
  manufacturer  String
  license_plate String @unique
  provider      String
  cost          Int

  status STATUS_EQUIPMENT @default(ATIVO)

  team   Team @relation(fields: [teamId], references: [id])
  teamId Int
}

model Employee {
  id           Int    @id @default(autoincrement())
  registration String @unique
  name         String @unique
  occupation   String
  base_salary  Int

  leadership LEADERS?        @default(NAO)
  status     STATUS_EMPLOYEE @default(ATIVO)

  team   Team @relation(fields: [teamId], references: [id])
  teamId Int
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  role     Role   @default(CONTROLLER)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("user")
}

enum Role {
  CONTROLLER
  ADMIN
  ROOT
}

enum UNITY {
  TORRE
  KM
  UNIDADE
}

enum STATUS_EQUIPMENT {
  ATIVO
  MANUTENCAO
}

enum STATUS_PRODUCTION {
  EXECUTADO
  PROGRAMADO
  ANDAMENTO
}

enum STATUS_EMPLOYEE {
  ATIVO
  TREINAMENTO
  AFASTADO
}

enum LEADERS {
  SIM
  NAO
}

enum EMBARGOES {
  LIBERADO
  PROJETO
  FUNDIARIO
  ARQUEOLOGIA
}

enum STAGE {
  PRELIMINAR
  CIVIL
  MONTAGEM
  LANCAMENTO
}

enum WEATHER {
  BOM
  CHUVA
  IMPRATICAVEL
}
